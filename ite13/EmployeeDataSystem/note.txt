---

**employee_data_input.c**

File allows the user to input details of multiple employees and stores the data in separate files. It defines two structures: `Address` and `Employee`, representing the address and employee information, respectively. The code prompts the user to enter the number of employees and their details, including their name, age, position, salary, and address. The entered data is then written to individual files for each attribute. The program ensures that the files are successfully opened and closed, and displays an error message if there are any issues.

**employee_data_output.c**

File reads the data from the files created by `employee_data_input.c` and provides various functionalities based on user choice. It defines the `Employee` structure and includes necessary header files. The program opens the required files for reading and determines the number of employees by counting the lines in the "Employee.txt" file. It then dynamically allocates memory to store the employee data in an array of structures. The code presents a menu to the user with options to display employees with a salary greater than 10,000, search for an employee by name and display their information, change employee salaries, and display unique positions. After executing the chosen operation, the program returns to the menu until the user chooses to exit. Finally, the files are closed, and the dynamically allocated memory is freed.

---